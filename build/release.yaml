name: $(Date:MMddyyyy)$(Rev:.r)-${{ parameters.Environment }}
parameters:
  - name: Environment
    type: string
    default: stg
    displayName: Environment specification
    values:
      - stg
      - sqa

trigger: none

variables:
- group: default
- name: repo1
  value: cxi-cdp-customer-profiles-partner-profile
- name: repo2
  value: cxi-cdp-customer-profiles-pos-profile
- name: repo3
  value: cxi-cdp-customer-profiles-user-profile
- name : tag
  value:  $(resources.pipeline.cxi-cdp-customer-profiles.runName)  

resources:
    repositories:
    - repository: templates
      type : git
      name : cxi-build-templates

    - repository: test-auto
      type : git
      name : cxi-cdp-test-auto  
    
    - repository: test-apiauto
      type : git
      name : cxi-cdp-api-test-auto
    
    pipelines:
      - pipeline: cxi-cdp-customer-profiles
        source: cxi-cdp-customer-profiles
        trigger: none
      - pipeline: Pipeline1 # Name of the pipeline resource
        source: cxi-cdp-api-test-auto (2)  

pool:
 vmImage: ubuntu-latest

stages:
 - stage: deploy
   displayName: Deploy to Kubernetes ${{ parameters.Environment }}
   jobs:
    - deployment: deploy
      displayName: Deploy to ${{ parameters.Environment }}
      variables:
      - group: common-${{ parameters.Environment }}
      environment: 'Kubernetes_${{ parameters.Environment }}'
      strategy:
        runOnce:
          deploy:
            steps:
            - download: none
            - script: echo "##vso[build.updatebuildnumber]$(tag)"  
            - template: HelmDeploy.yaml@templates
              parameters:
                kubernetesServiceConnectionName: 'Kub_CXI_Cluster'
                namespace: '${{ parameters.Environment }}-customer-profiles'
                acrname: '$(registry)'
                azureservice: 'cxi-devops'
                acrrepo: 'cxi-default'
                acrchartversion: '20220804.5'
                chartPath: '$(build.stagingdirectory)/cxi-default/'
                components:
                - componentname: 'customer-profiles-partner-profile'
                  releasename: 'customer-profiles-partner-profile'
                  overridevalues: "
                    application.name=customer-profiles-partner-profile,\
                    application.env=${{ parameters.Environment }},\
                    deployment.container.registry=$(registry),\
                    deployment.container.image.name=$(repo1),\
                    deployment.container.image.tag=$(tag),\
                    deployment.env.AZURE_APP_CONFIG=$(AZURE_APP_CONFIG),\
                    deployment.env.AZURE_KEY_VAULT_ID=$(AZURE_KEY_VAULT_ID),\
                    deployment.env.AZURE_KEY_VAULT_SECRET=$(AZURE_KEY_VAULT_SECRET),\
                    deployment.env.AZURE_KEY_VAULT_URL=$(AZURE_KEY_VAULT_URL),\
                    deployment.env.ASPNETCORE_ENVIRONMENT=$(ASPNETCORE_ENVIRONMENT),\
                    deployment.replicaCount=2,\
                    deployment.resources.requests.memory=350Mi,\
                    deployment.resources.requests.cpu=20m,\
                    deployment.resources.limits.memory=700Mi,\
                    deployment.resources.limits.cpu=100m,\
                    autoscaling.enabled=true,\
                    autoscaling.minReplicasCount=2,\
                    autoscaling.maxReplicasCount=5,\
                    autoscaling.targetCPUUtilizationPercentage=70"
                - componentname: 'customer-profiles-pos-profile'
                  releasename: 'customer-profiles-pos-profile'
                  overridevalues: "
                    application.name=customer-profiles-pos-profile,\
                    application.env=${{ parameters.Environment }},\
                    deployment.container.registry=$(registry),\
                    deployment.container.image.name=$(repo2),\
                    deployment.container.image.tag=$(tag),\
                    deployment.env.AZURE_APP_CONFIG=$(AZURE_APP_CONFIG),\
                    deployment.env.AZURE_KEY_VAULT_ID=$(AZURE_KEY_VAULT_ID),\
                    deployment.env.AZURE_KEY_VAULT_SECRET=$(AZURE_KEY_VAULT_SECRET),\
                    deployment.env.AZURE_KEY_VAULT_URL=$(AZURE_KEY_VAULT_URL),\
                    deployment.env.ASPNETCORE_ENVIRONMENT=$(ASPNETCORE_ENVIRONMENT),\
                    deployment.replicaCount=2,\
                    deployment.resources.requests.memory=350Mi,\
                    deployment.resources.requests.cpu=20m,\
                    deployment.resources.limits.memory=700Mi,\
                    deployment.resources.limits.cpu=100m,\
                    autoscaling.enabled=true,\
                    autoscaling.minReplicasCount=2,\
                    autoscaling.maxReplicasCount=5,\
                    autoscaling.targetCPUUtilizationPercentage=70"
                - componentname: 'customer-profiles-user-profile'
                  releasename: 'customer-profiles-user-profile'
                  overridevalues: "
                    application.name=customer-profiles-user-profile,\
                    application.env=${{ parameters.Environment }},\
                    deployment.container.registry=$(registry),\
                    deployment.container.image.name=$(repo3),\
                    deployment.container.image.tag=$(tag),\
                    deployment.env.AZURE_APP_CONFIG=$(AZURE_APP_CONFIG),\
                    deployment.env.AZURE_KEY_VAULT_ID=$(AZURE_KEY_VAULT_ID),\
                    deployment.env.AZURE_KEY_VAULT_SECRET=$(AZURE_KEY_VAULT_SECRET),\
                    deployment.env.AZURE_KEY_VAULT_URL=$(AZURE_KEY_VAULT_URL),\
                    deployment.env.ASPNETCORE_ENVIRONMENT=$(ASPNETCORE_ENVIRONMENT),\
                    deployment.replicaCount=2,\
                    deployment.resources.requests.memory=350Mi,\
                    deployment.resources.requests.cpu=20m,\
                    deployment.resources.limits.memory=700Mi,\
                    deployment.resources.limits.cpu=100m,\
                    autoscaling.enabled=true,\
                    autoscaling.minReplicasCount=2,\
                    autoscaling.maxReplicasCount=5,\
                    autoscaling.targetCPUUtilizationPercentage=70"
 - stage: TestFilesCreation
   displayName: TestFiles
   jobs:
   - job: Test_files
     steps: 
     - task: Kubernetes@1
       displayName: Login Dev AKS
       inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'Kub_CXI_Cluster'
        command: 'login'
     - task: Bash@3
       displayName: Expose Allure Locally
       inputs:
        targetType: 'inline'
        script: |
          echo "#!/usr/bin/bash" > expose_svc_local.sh
          echo "set +x" >> expose_svc_local.sh
          echo "kubectl port-forward svc/dev-onboarding -n dev-onboarding --address 0.0.0.0 10000:80 &" >> expose_svc_local.sh
          echo "kubectl port-forward svc/dev-customer-profiles-partner-profile -n dev-customer-profiles --address 0.0.0.0 10001:80 &" >> expose_svc_local.sh
          echo "kubectl port-forward svc/dev-audiences-app -n dev-audiences --address 0.0.0.0 10002:80 &" >> expose_svc_local.sh
          # Allure-API
          echo "kubectl port-forward svc/allure-service-load-balancer -n allure-docker-service --address 0.0.0.0 10003:6060 &" >> expose_svc_local.sh
          # Allure-UI
          echo "kubectl port-forward svc/allure-service-load-balancer -n allure-docker-service --address 0.0.0.0 10004:7070 &" >> expose_svc_local.sh
      
          chmod +x expose_svc_local.sh
          ./expose_svc_local.sh
          chmod +x expose_svc_local.sh
          ./expose_svc_local.sh
          sleep 10
          netstat -tunlp
          echo "=== COMPLETED ==="

     - task: Bash@3
       displayName: Validate Port
       inputs:
        targetType: 'inline'
        script: 'netstat -tunlp'
     - task: Maven@4
       inputs:
         mavenPomFile: '$(system.defaultWorkingDirectory)/cxi-cdp-api-test-auto/pom.xml'
         publishJUnitResults: true
         testResultsFiles: '**/TEST-*.xml'
         javaHomeOption: 'JDKVersion'
         mavenVersionOption: 'Default'
         mavenAuthenticateFeed: false 
         effectivePomSkip: false
         sonarQubeRunAnalysis: false
       condition: succeededOrFailed()
       continueOnError: true 


 - template: AutoTests.yaml@templates
   parameters:
    env: ${{ parameters.Environment }}
    filter: '--filter "TestCategory=Authorization|TestCategory=Onboarding|TestCategory=Associates"'
    condition: "or(in(dependencies.deploy.result, 'Succeeded', 'SucceededWithIssues', 'Skipped'),in(dependencies.deploy.result, 'Succeeded', 'SucceededWithIssues', 'Skipped'))"
      

 - stage: rollback
   pool:
        vmImage: ubuntu-latest
   displayName: Rollback
   condition: failed()
   jobs:
          - deployment: rollback
            displayName: Rollback
            environment: 'Kubernetes_${{ parameters.Environment }}'
            strategy:
              runOnce:
                deploy:
                  steps:
                  - download: none
                  - template: HelmRollback.yaml@templates
                    parameters:
                      kubernetesServiceConnectionName: 'Kub_CXI_Cluster'
                      namespace: '${{ parameters.Environment }}-customer-profiles'
                      components:
                      - componentname: 'customer-profiles-partner-profile'
                        releasename: 'customer-profiles-partner-profile'
                      - componentname: 'customer-profiles-pos-profile'
                        releasename: 'customer-profiles-pos-profile'
                      - componentname: 'customer-profiles-user-profile'
                        releasename: 'customer-profiles-user-profile'